name: Deploy to EC2

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: nest-swagger
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: SSH and deploy to EC2
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ec2-server-key.pem
          chmod 600 ec2-server-key.pem
          ssh -tt -o StrictHostKeyChecking=no -i "ec2-server-key.pem" ec2-user@${{ secrets.EC2_PUBLIC_IP }}.ap-northeast-2.compute.amazonaws.com << EOF
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ env.AWS_REGION }}
          export ECR_REGISTRY=${{ env.ECR_REGISTRY }}
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
          docker stop swagger
          docker rm swagger
          docker pull ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker run --name swagger -d -p 8080:8080 --env-file .env ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker ps -a
          exit
          EOF
